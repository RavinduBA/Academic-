JUnit

JUnit is a testing framework for the Java programming language, primarily designed for unit testing.
Unit testing involves testing individual units or components of a software to ensure they work as intended.


Key Features of JUnit:

Annotations:

@Test        : Marks a method as a test method.
@BeforeEach  : Indicates that the annotated method should be run before each test.
@AfterEach   : Indicates that the annotated method should be run after each test.
@BeforeAll   : Indicates that the annotated method should be run once before all tests.
@AfterAll    : Indicates that the annotated method should be run once after all tests.
@Disabled    : Used to disable a test method or class.


Assertions:

JUnit provides a range of assertion methods to check the expected outcomes of tests:

assertEquals(expected, actual): Asserts that two values are equal.
assertTrue(condition)         : Asserts that a condition is true.
assertFalse(condition)        : Asserts that a condition is false.
assertNull(object)            : Asserts that an object is null.
assertNotNull(object)         : Asserts that an object is not null.
assertThrows(exception.class, executable): Asserts that an exception is thrown.


EX:

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class CalculatorTest {

    private Calculator calculator;

    @BeforeEach
    public void setUp() {
        calculator = new Calculator();
    }

    @Test
    public void testAddition() {
        assertEquals(5, calculator.add(2, 3));
    }

    @Test
    public void testSubtraction() {
        assertEquals(2, calculator.subtract(5, 3));
    }

    @Test
    public void testMultiplication() {
        assertEquals(15, calculator.multiply(3, 5));
    }

    @Test
    public void testDivision() {
        assertEquals(2, calculator.divide(10, 5));
    }

    @Test
    public void testDivisionByZero() {
        assertThrows(ArithmeticException.class, () -> calculator.divide(10, 0));
    }
}
